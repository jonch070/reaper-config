// LBX-MidiFilter
// 16.05.2010

desc:LBX-MidiFilter
options:gmem=LBX_MF_SharedMem

//slider1:0<0,17,1{Off,All,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16}>MIDI Channel for filters
//slider2:0<0,16,1{Same as input,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16}>MIDI Channel for output
//slider3:0<0,1,1{Off,On}>Pitch Wheel filter
//slider4:0<0,1,1{Off,On}>Polyphonic Aftertouch filter
//slider5:0<0,1,1{Off,On}>Channel Aftertouch filter
//slider6:0<0,1,1{Off,On}>Program Change filter
//slider7:0<0,129,1{Off,All,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127}>Control Change filter #1
//slider8:0<0,129,1{Off,All,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127}>Control Change filter #2
//slider9:0<0,129,1{Off,All,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127}>Control Change filter #3
//slider10:0<0,129,1{Off,All,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127}>Control Change filter #4

slider1:0<0,255,1>-Instance ID
slider2:0<0,1,1>-Read Data 

in_pin:none
out_pin:none

@init

  gfx_h = 32;
  
    NOTE_OFF = $x80;           // note off MIDI message code
    NOTE_ON = $x90;            // note on MIDI message code
    AFTERTOUCH_POLY = $xA0;   // poly aftertouch MIDI message code
    CONTROL_CHANGE = $xB0;    // control change MIDI message code
    PROGRAM_CHANGE = $xC0;    // program change MIDI message code
    AFTERTOUCH_CHANNEL = $xD0;    // channel aftertouch MIDI message code
    PITCH_BEND = $xE0;        // pitch bend MIDI message code
    OTHER = $xF0;

  /*indcc = 0;
  cc_filter = 0;
  cc_filter_all = 0;
  pitchbend_filter = 0;
  sysex_filter = 0;
  pc_filter = 0;
  aftertouch_poly_filter = 0;
  aftertouch_channel_filter = 0;
  
  memset(cc_filter,0,128);*/

@serialize

  file_var(0, cc_filter_all);
  file_var(0, pitchbend_filter);
  file_var(0, sysex_filter);
  file_var(0, pc_filter);
  file_var(0, aftertouch_poly_filter);
  file_var(0, aftertouch_channel_filter);
  file_mem(0, cc_filter, 128);
  cc = 0;
  indcc = 0;
  loop(128,
    cc_filter[cc] == 1 ? (
      indcc = 1;
    );
    cc += 1;
  );
  

@slider

  /*slider2 == 1 ? (
    memset(cc_filter,0,128);
    cc = 0;
    indcc = 0;
    loop(128,
      cc_filter[cc] = gmem[cc];
      cc_filter[cc] == 1 ? (
        indcc = 1;
      );
      cc += 1;
    );
    cc_filter_all = gmem[128];
    pitchbend_filter = gmem[129];
    sysex_filter = gmem[130];
    pc_filter = gmem[131];
    aftertouch_poly_filter = gmem[132];
    aftertouch_channel_filter = gmem[133];
    slider2 = 0;    
  );*/

@block

slider2 == 1 && gmem[255] == 1 ? (

  memset(cc_filter,0,128);
  cc = 0;
  indcc = 0;
  loop(128,
    cc_filter[cc] = gmem[cc];
    cc_filter[cc] == 1 ? (
      indcc = 1;
    );
    cc += 1;
  );
  cc_filter_all = gmem[128];
  pitchbend_filter = gmem[129];
  sysex_filter = gmem[130];
  pc_filter = gmem[131];
  aftertouch_poly_filter = gmem[132];
  aftertouch_channel_filter = gmem[133];
  
  slider2 = 0;
  gmem[255] = 0;
);

while
(
  midirecv(mpos, msg1, msg2, msg3) ?
  (
    // get message components
    msg = (msg1 & $xf0);             // message type nibble
    channel = (msg1 & $x0f) + 1;    // channel nibble
    eat = 0;
  
    ((msg != 0) && (msg != OTHER)) ?
    (
      lastmsg = msg;
      
      (msg == CONTROL_CHANGE)  ?              // control change filter
      (
        (cc_filter_all == 1 || cc_filter[msg2] == 1) ?
        (
          eat = 1;
        );
      );
      
      ((msg == PITCH_BEND) && (pitchbend_filter == 1)) ?      // pitch bend filter
      (
        eat = 1;
      );
      
      ((msg == AFTERTOUCH_POLY) && (aftertouch_poly_filter == 1)) ?    // polyphonic aftertouch filter
      (
        eat = 1;
      );
      
      ((msg == AFTERTOUCH_CHANNEL) && (aftertouch_channel_filter == 1)) ?  // polyphonic aftertouch filter
      (
        eat = 1;
      );
      
      ((msg == PROGRAM_CHANGE) && (pc_filter == 1)) ?    // program changes
      (
        eat = 1;
      );      
    );
      
    (eat == 0) ?
    (
      midisend(mpos, msg1, msg2, msg3);
    );
  );
  
  msg1;
);


@gfx
gfx_r=gfx_b=gfx_g=1;
gfx_x = 0;
gfx_y = 5;

  gfx_drawstr("ALL CC FILTER: ");
  cc_filter_all == 1 ? (
    gfx_r=gfx_b=0;gfx_g=1;
    gfx_drawstr("ON");
  ) : (
    gfx_g=gfx_b=0;gfx_r=1;
    gfx_drawstr("OFF");  
  );
  gfx_r=gfx_b=gfx_g=1;
  gfx_x = 0;
  gfx_y += 12;

  gfx_drawstr("PITCHBEND FILTER: ");
  pitchbend_filter == 1 ? (
    gfx_r=gfx_b=0;gfx_g=1;
    gfx_drawstr("ON");
  ) : (
    gfx_g=gfx_b=0;gfx_r=1;
    gfx_drawstr("OFF");  
  );
  gfx_r=gfx_b=gfx_g=1;
  gfx_x = 0;
  gfx_y += 12;

  gfx_drawstr("SYSEX FILTER: ");
  sysex_filter == 1 ? (
    gfx_r=gfx_b=0;gfx_g=1;
    gfx_drawstr("ON");
  ) : (
    gfx_g=gfx_b=0;gfx_r=1;
    gfx_drawstr("OFF");  
  );
  gfx_r=gfx_b=gfx_g=1;
  gfx_x = 0;
  gfx_y += 12;

  gfx_drawstr("PROGRAM CHANGE FILTER: ");
  pc_filter == 1 ? (
    gfx_r=gfx_b=0;gfx_g=1;
    gfx_drawstr("ON");
  ) : (
    gfx_g=gfx_b=0;gfx_r=1;
    gfx_drawstr("OFF");  
  );
  gfx_r=gfx_b=gfx_g=1;
  gfx_x = 0;
  gfx_y += 12;
  
  gfx_drawstr("AFTERTOUCH POLY FILTER: ");
  aftertouch_poly_filter == 1 ? (
    gfx_r=gfx_b=0;gfx_g=1;
    gfx_drawstr("ON");
  ) : (
    gfx_g=gfx_b=0;gfx_r=1;
    gfx_drawstr("OFF");  
  );
  gfx_r=gfx_b=gfx_g=1;
  gfx_x = 0;
  gfx_y += 12;

  gfx_drawstr("AFTERTOUCH CHANNEL FILTER: ");
  aftertouch_channel_filter == 1 ? (
    gfx_r=gfx_b=0;gfx_g=1;
    gfx_drawstr("ON");
  ) : (
    gfx_g=gfx_b=0;gfx_r=1;
    gfx_drawstr("OFF");  
  );

  gfx_r=gfx_b=gfx_g=1;
  gfx_x = 0;
  gfx_y += 12;

  gfx_drawstr("INDIVIDUAL CC FILTERS: ");
  indcc == 1 ? (
    gfx_r=gfx_b=0;gfx_g=1;
    gfx_drawstr("ON");
  ) : (
    gfx_g=gfx_b=0;gfx_r=1;
    gfx_drawstr("OFF");  
  );

  //gfx_r=gfx_b=gfx_g=1;
  //gfx_x = 0;
  //gfx_y += 12;
  
